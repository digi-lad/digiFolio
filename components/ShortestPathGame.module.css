.container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  background-color: var(--background);
  font-family: var(--font-family-monospace);
  color: var(--foreground);
  padding: var(--spacing-4);
  gap: var(--spacing-4);
}

.controls {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-3);
  padding: var(--spacing-4);
  background-color: var(--surface);
  border-radius: var(--radius);
  border: 1px solid var(--border);
  box-shadow: var(--shadow-md);
}

.buttons {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-2);
  width: 100%;
}

.buttons button {
  flex: 1 1 auto;
  min-width: 120px;
  transition: all var(--animation-duration-fast) ease;
}

.buttons button:hover {
  box-shadow: 0 0 12px color-mix(in srgb, var(--primary), transparent 60%);
  transform: translateY(-1px);
}

.info {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-2);
  font-size: 0.9rem;
  padding-top: var(--spacing-2);
  border-top: 1px solid var(--border);
}

.info p {
  margin: 0;
  line-height: 1.5;
}

.weightValue {
  color: var(--primary);
  font-weight: 700;
  text-shadow: 0 0 8px color-mix(in srgb, var(--primary), transparent 50%);
}

.feedback {
  font-style: italic;
  padding: var(--spacing-2);
  border-radius: var(--radius-sm);
  background-color: var(--muted);
}

.feedbackSuccess {
  color: var(--success);
  background-color: color-mix(in srgb, var(--success), transparent 90%);
  border-left: 3px solid var(--success);
}

.feedbackError {
  color: var(--error);
  background-color: color-mix(in srgb, var(--error), transparent 90%);
  border-left: 3px solid var(--error);
}

.feedbackWarning {
  color: var(--warning);
  background-color: color-mix(in srgb, var(--warning), transparent 90%);
  border-left: 3px solid var(--warning);
}

.svgContainer {
  flex-grow: 1;
  position: relative;
  border: 2px solid var(--accent);
  background-color: hsl(232 15% 8%);
  background-image: 
    radial-gradient(circle, hsl(230 15% 20% / 0.3) 1px, transparent 1px);
  background-size: 20px 20px;
  border-radius: var(--radius);
  overflow: hidden;
  box-shadow: 
    0 0 20px color-mix(in srgb, var(--accent), transparent 70%),
    inset 0 0 30px color-mix(in srgb, var(--accent), transparent 90%);
}

.scanlineOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: var(--z-content-low);
  background: repeating-linear-gradient(
    0deg,
    transparent,
    transparent 2px,
    hsl(0 0% 0% / 0.03) 2px,
    hsl(0 0% 0% / 0.03) 4px
  );
  animation: scanline 8s linear infinite;
}

@keyframes scanline {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(20px);
  }
}

.svgCanvas {
  width: 100%;
  height: 100%;
  position: relative;
  z-index: var(--z-content);
}

.nodeGroup {
  cursor: grab;
  transition: filter var(--animation-duration-fast) ease;
}

.nodeGroup.dragging {
  cursor: grabbing;
}

.nodeGroup:hover .node {
  filter: brightness(1.2) drop-shadow(0 0 8px var(--accent));
}

.node {
  fill: var(--surface);
  stroke: var(--border);
  stroke-width: 2px;
  transition: all var(--animation-duration-normal) ease;
}

.draggingNode {
  filter: brightness(1.3) drop-shadow(0 0 12px var(--accent));
  transform-origin: center;
}

.startNode {
  fill: color-mix(in srgb, var(--success), black 20%);
  stroke: var(--success);
  stroke-width: 3px;
  filter: drop-shadow(0 0 8px color-mix(in srgb, var(--success), transparent 40%));
}

.endNode {
  fill: color-mix(in srgb, var(--error), black 20%);
  stroke: var(--error);
  stroke-width: 3px;
  filter: drop-shadow(0 0 8px color-mix(in srgb, var(--error), transparent 40%));
}

.userPathNode {
  stroke: var(--accent);
  stroke-width: 3px;
  fill: color-mix(in srgb, var(--accent), black 40%);
}

.lastUserNode {
  filter: drop-shadow(0 0 12px var(--accent));
  animation: pulseGlow 1.5s ease-in-out infinite;
}

@keyframes pulseGlow {
  0%, 100% {
    filter: drop-shadow(0 0 8px var(--accent));
  }
  50% {
    filter: drop-shadow(0 0 16px var(--accent));
  }
}

.nodeLabel {
  fill: var(--foreground);
  font-size: 0.7rem;
  font-weight: 700;
  text-anchor: middle;
  dominant-baseline: middle;
  pointer-events: none;
  user-select: none;
  text-shadow: 0 0 4px var(--background);
}

.distanceLabel {
  fill: var(--info);
  font-size: 0.8rem;
  text-anchor: middle;
  pointer-events: none;
  user-select: none;
  animation: fadeIn 0.4s ease;
}

.edge {
  stroke: var(--muted);
  stroke-width: 2px;
  transition: all var(--animation-duration-normal) ease;
}

.edgeHighlight {
  stroke: var(--accent);
  stroke-width: 4px;
  filter: drop-shadow(0 0 6px color-mix(in srgb, var(--accent), transparent 30%));
  animation: edgePulse 2s ease-in-out infinite;
}

@keyframes edgePulse {
  0%, 100% {
    stroke-width: 4px;
    filter: drop-shadow(0 0 4px color-mix(in srgb, var(--accent), transparent 30%));
  }
  50% {
    stroke-width: 5px;
    filter: drop-shadow(0 0 10px color-mix(in srgb, var(--accent), transparent 20%));
  }
}

.edgeWeight {
  fill: var(--foreground);
  font-size: 0.75rem;
  font-weight: 600;
  text-anchor: middle;
  dominant-baseline: middle;
  pointer-events: none;
  user-select: none;
  paint-order: stroke fill;
  stroke: var(--background);
  stroke-width: 3px;
  stroke-linecap: round;
  stroke-linejoin: round;
}

/* Animation Styles */
.visitedNodeAnim {
  fill: color-mix(in srgb, var(--secondary), black 40%);
  stroke: var(--secondary);
  stroke-width: 3px;
}

.visitingNodeAnim {
  animation: pulse 1.2s infinite;
}

.solutionPathNode {
  stroke: var(--primary);
  stroke-width: 4px;
  fill: color-mix(in srgb, var(--primary), black 20%);
  filter: drop-shadow(0 0 12px var(--primary));
}

@keyframes pulse {
  0% {
    filter: drop-shadow(0 0 6px var(--secondary));
  }
  50% {
    filter: drop-shadow(0 0 16px var(--secondary));
  }
  100% {
    filter: drop-shadow(0 0 6px var(--secondary));
  }
}

@keyframes fadeIn {
  from { 
    opacity: 0; 
    transform: translateY(5px); 
  }
  to { 
    opacity: 1; 
    transform: translateY(0); 
  }
}

/* Dialog Customization */
.dialogContent {
  border: 2px solid var(--accent);
  box-shadow: 0 0 30px color-mix(in srgb, var(--accent), transparent 50%);
}

.dialogHeader {
  border-bottom: 1px solid var(--border);
  padding-bottom: var(--spacing-4);
  margin-bottom: var(--spacing-4);
}

.dialogHeader :global(h2) {
  color: var(--accent);
}

.dialogButton {
  background-color: var(--accent);
  color: var(--accent-foreground);
  border: none;
}

.dialogButton:hover {
  background-color: color-mix(in srgb, var(--accent), white 15%);
  box-shadow: 0 0 12px color-mix(in srgb, var(--accent), transparent 40%);
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .container {
    padding: var(--spacing-2);
    gap: var(--spacing-2);
  }

  .controls {
    padding: var(--spacing-3);
  }

  .buttons {
    flex-direction: column;
  }

  .buttons button {
    width: 100%;
    min-width: unset;
  }

  .info {
    font-size: 0.85rem;
  }

  .nodeLabel {
    font-size: 0.6rem;
  }

  .edgeWeight {
    font-size: 0.7rem;
  }
}